import { loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { expect } from "chai";
import { ethers } from "hardhat";

describe("ELAMinter", function () {
  // We define a fixture to reuse the same setup in every test.
  async function deployELAMinter() {
    // Contracts are deployed using the first signer/account by default
    const [owner, otherAccount] = await ethers.getSigners();

    const ELAMinter = await ethers.getContractFactory("ELAMinter");
    const elaminter = await ELAMinter.deploy();

    return { elaminter, owner, otherAccount };
  }

  describe("decodeRechargeData", function () {
    // it("Should correctly decode RechargeData", async function () {
    //   const { elaminter } = await loadFixture(deployELAMinter);
    //   const msg = "0x000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000005200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000005600000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000005e00000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000006200000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000006600000000000000000000000000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000006a00000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000000000000000000000000000006e00000000000000000000000000000000000000000000000000000000000000009000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a00000000000000000000000000000000000000000000000000000000000000720000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000bebc20000000000000000000000000000000000000000000000000000000000000186a
    //   console.log("bytes = ", msg);
    //   const rechargeData = await elaminter.decodeRechargeData(msg);
    //   console.log("rechargeData = ", rechargeData);
    // });

    it("test Recharge method", async function () {
      const { elaminter } = await loadFixture(deployELAMinter);
      const hash = "0xe1390d61150f09e3d19ddc821075c08e53ed5f78caeb04dbec04390a00459f11"
      const rechargeData = await elaminter.Recharge(hash);
      console.log("rechargeData = ", rechargeData);
    });
  });
});